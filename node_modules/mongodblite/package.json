{
  "author": {
    "name": "Craig Condon"
  },
  "name": "mongodblite",
  "description": "self-contained mongodb implementation",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/crcn/node-mongodblite.git"
  },
  "main": "./lib/index.js",
  "dependencies": {
    "sift": "*",
    "structr": "*",
    "underscore": "1.2.x",
    "tq": "0.0.x",
    "step": "0.0.x",
    "cashew": "0.0.x",
    "fiddle": "0.0.x",
    "outcome": "0.0.x",
    "asyngleton": "0.0.x",
    "mkdirp": "0.3.x",
    "traverse": "0.5.x",
    "mongodb": "1.1.x",
    "structr-step": "0.0.x"
  },
  "devDependencies": {},
  "mesh": true,
  "readme": "Inspired by [meteor](http://meteor.com)\n\n\n### Why?\n\n- I wanted a decoupled library with the same level of functionality provided in [meteor](http://meteor.com)\n- Cached on the client-side, and server-side. Less hits to mongodb itself.\n- Allows for users to be sandboxed in their own collection (authentication).\n- listening to cursors for any change\n\n\n### TODO\n\n- fork mongoose ODM and use *this* as the default driver\n- REST interface mapper\n- sync items to backend (persistence api)\n- rest gateway example\n- DNode driver\n- Http driver\n- object modifiers: $inc, $set, $unset, $push $pushAll, $addToSet, $pop, $pull, $pullAll, $rename, $bit (should be separate repo - fiddle?)\n- cursor.emit(\"update\") when limit, selector, or skip have changed\n\n\n### Examples\n\nHere's a simple example using the memory driver:\n\n```javascript\n\nvar mdblite = require('mongodblite'),\ndb = mdblite.db(new mdblite.drivers.Memory());\n\n\nvar people = db.collection('people');\n\n//add some data\npeople.insert([\n\t{\n\t\tname: \"Craig\",\n\t\tage: 22\n\t},\n\t{\n\t\tname: \"Tim\",\n\t\tage: 21\n\t},\n\t{\n\t\tname: \"John\",\n\t\tage: 20\n\t}\n}\n]);\n\n//create a filter against the \"people\" collection\nvar peopleOlderThan21 = people.find({age:{$gt:21}}).limit(20);\n\npeopleOlderThan21.observe(function(observer) {\n\t\n\t//the filtered items - max = 20\n\tconsole.log(observer.source);\n\n\tobserver.on(\"insert\", function(items) {\n\t\t//craig - source is also updated\n\t});\n\n\t//called when something big changes, such as limit, or skip\n\tobserver.on(\"reset\", function() {\n\n\t});\n\n});\n\n\n//insert a new user, triggers listener above\npeople.insert({\n\tname: \"Sarah\",\n\tage: 22\n})\n\n\n```\n\n\n",
  "readmeFilename": "README.md",
  "_id": "mongodblite@0.0.2",
  "dist": {
    "shasum": "91239984af41cf2d013c5a8ba1ff732c5fda2a21"
  },
  "_from": "mongodblite"
}
